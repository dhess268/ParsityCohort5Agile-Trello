swagger: '2.0'
info:
  title: Parsity_Trello API
  description: Move your app forward with the Parsity_Trello API
  version: '1.0.0'
# the domain of the service
host: api.parsityTrello.com
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /v1
produces:
  - application/json
paths:
  /auth/signin:
    post:
      summary: user login
      tags:
        - UserAccount
      description: Let user login
      parameters:
        - name: username
          in: query
          description: user's login username
          required: true
          type: string
        - name: password
          in: query
          description: user's login password
          required: true
          type: string
      responses:
        '200':
          description: Successful
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /auth/signout:
    post:
      summary: user logout
      description: Let user logout
      tags:
        - UserAccount
      responses:
        '200':
          description: user logout success
        '400':
          description: Bad request
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /user:
    get:
      summary: get list of users
      description: get users
      tags:
        - Users
      responses:
        '200':
          description: A JSON array of users
          content:
            application/json:
              schema:
                type: object
                items:
                  _id:
                    description: auto-generated id for users. this is the {userId} path parameter
                  username:
                    type: string
                  firstname:
                    type: string
                  lastname:
                    type: string
                  email:
                    type: string
                  phone:
                    type: string
                  avatarUrl:
                    description: profile picture
                    type: string
                  contacts:
                    description: array of contacts (ref user id)
                    type: array
                    items:
                      _id:
                        type: string
                  organization:
                    description: array of organizations that the user belongs to (ref organization id)
                    type: array
                    items:
                      _id:
                        type: string
                  password:
                    description: user password (this will eventually be changed to a more secure method, also will eventually not be returned)
                    type: string
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: add new User
      description: add new User
      tags:
        - Users
      responses:
        '204':
          description: success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /user/:userId:
    get:
      description: get User by userId
      tags:
        - Users
      parameters:
        - userId: _id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      description: remove User by userId
      tags:
        - Users
      parameters:
        - userId: _id
          in: path
          required: true
      responses:
        '204':
          description: success
          content:
            string: 'User has been successfully removed from the database'
  /boards:
    get:
      summary: get user boards
      description: get boards
      tags:
        - Boards
      responses:
        '200':
          description: success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: add an user board
      description: add an user board
      tags:
        - Boards
      responses:
        '200':
          description: success
        default:
          description: Unexpected error
          schema:
            $ref: '#/components/definitions/Error'

  /boards/:id:
    get:
      summary: get an user board by id
      description: get an user board by id
      tags:
        - Boards
      responses:
        '200':
          description: success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

    put:
      summary: update an user board
      description: update an user board
      tags:
        - Boards
      responses:
        '200':
          description: success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

    delete:
      summary: delete an user board
      description: delete an user board
      tags:
        - Boards
      responses:
        '200':
          description: success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /boards/:id/user:
    post:
      summary: add an user to board
      description: add an user to board
      tags:
        - Boards
      responses:
        '200':
          description: success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

    delete:
      summary: remove an user from board
      description: remove an user from board
      tags:
        - Boards
      responses:
        '200':
          description: success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /organization:
    post:
      summary: add an organization
      description: add an organization
      tags:
        - Organization
      responses:
        '200':
          description: success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: remove an organization
      description: remove an organization
      tags:
        - Organization
      responses:
        '200':
          description: success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
components:
definitions:
  User:
    type: object
    properties:
      username:
        description: Username of the account.
        type: string
        minlength: 4
        required: true
        unique: true
      firstname:
        description: First name of the User.
        type: string
        minlength: 1
        required: true
        unique: true
      lastname:
        description: Last name of the User.
        type: string
        minlength: 1
        required: true
      email:
        description: Email address of the User
        type: string
        required: true
      avatarUrl:
        description: Image URL of the User.
        type: string
        required: false
      phone:
        description: User's phone number.
        type: string
        required: false
      contacts:
        description: User's contacts/friends (ref User id)
        type: array
        items:
          type: string
      organization:
        description: array of Organizations that the User belongs to (ref Organization id)
        type: array
        items:
          type: string
      password:
        description: User password. sooner or later this will be replaced by a more secure method.
        type: string
        minlength: 6
  Organization:
    description: Primary owner of boards. Contains Users
    type: object
    properties:
      orgName:
        description: the name of the Organization
        type: string
        required: true
      orgOwner:
        description: the user who is owner of the Organization
        type: string
        required: true
      orgBoards:
        description: array of Boards that the Organization is using (ref Board id)
        type: array
        items:
          type: string
      orgMembers:
        description: array of Users
        type: array
        items:
          type: string
  Board:
    description: collection of Lists.
    type: object
    properties:
      boardName:
        description: the name of the board
        type: string
        required: true
      organization:
        description: the Organization that the board belongs to
        type: object
        properties:
          _id: string
      users:
        description: an array of Users who subscribe to the Board (ref User id)
        type: array
        items:
          type: string
      lists:
        description: an array of Lists that are contained in the Board (ref List id)
        type: array
        items:
          type: string
  List:
    description: collection of Cards
    type: object
    properties:
      listName:
        type: string
        required: true
      cards:
        description: an array of Cards that are contained in the List (ref Card id)
        type: array
        items:
          type: string
  Card:
    description: contains data. Smallest form of organization, can support any data type
    type: object
    properties:
      cardTitle:
        description: the title of the Card
        type: string
        required: true
        minlength: 1
      cardLabel:
        description: additional information about the contents of the Card
        type: string
        required: false
      cardDescription:
        description: the primary contents of the Card
        type: string
        required: false
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
